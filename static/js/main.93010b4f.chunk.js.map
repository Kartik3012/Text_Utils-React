{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","btn_col","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","style","backgroundColor","color","rows","newText","toUpperCase","showAlert","toLowerCase","_step","_iterator","_createForOfIteratorHelper","split","s","n","done","item","tempText","undefined","substring","length","err","e","f","join","toFixed","Alert","alert","class","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.93010b4f.chunk.js","sourcesContent":["//rfc short form for react function based component\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexRadioCheckDefault\" aria-checked=\"false\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefault\">Dark Mode</label>\r\n          </div>\r\n\r\n          {/* <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.RedtoggleMode} className=\"form-check-input\"  type=\"checkbox\" role=\"switch\" id=\"flexRadioCheckDefaultRed\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefaultRed\">Red Dark Mode</label>\r\n          </div>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.BluetoggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitcRadioDefaultBlue\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefaultBlue\">Blue Dark Mode</label>\r\n          </div>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.GreentoggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexRadioCheckDefaultGreen\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefaultGreen\">Green Dark Mode</label>\r\n          </div> */}\r\n            {/* checked={`${props.mode==='blue'?'false':'true'}`} */}\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes={\r\n    title :PropTypes.string.isRequired,\r\n    about :PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: \"Default title\",\r\n    about: \"Default About\"\r\n}","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted text to Upper Case\",\"Success\");\r\n    }\r\n\r\n    const handleLowClick=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted text to Lower Case\",\"Success\");\r\n\r\n    }\r\n\r\n    const Clear=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"Cleared text\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleCapClick=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=\"\";\r\n        for ( let item of text.split(/[ ]+/))\r\n        {\r\n            let tempText=\"\";\r\n            if(item[0]!==undefined)\r\n            {\r\n                tempText+=item[0].toUpperCase();\r\n                tempText+=item.substring(1,item.length).toLowerCase();\r\n                newText+=tempText+\" \";  \r\n            }\r\n        }\r\n        \r\n        setText(newText.substring(0,newText.length));\r\n        props.showAlert(\"Converted Capitalize Case\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=text.split(/[ ]+/);\r\n        \r\n        \r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Spaces\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"Onchange\")  \r\n        setText(event.target.value);\r\n    }\r\n\r\n    let btn_col;\r\n    if(props.mode==='light')\r\n    {\r\n        btn_col='primary';\r\n    }\r\n    else if(props.mode==='dark')\r\n    {\r\n        btn_col='dark';\r\n    } \r\n    // else if(props.mode==='red')\r\n    // {\r\n    //     btn_col='danger';\r\n    // } \r\n    // else if(props.mode==='blue')\r\n    // {\r\n    //     btn_col='info';\r\n    // } \r\n    // else if(props.mode==='green')\r\n    // {\r\n    //     btn_col='success';\r\n    // } \r\n    const[text,setText]=useState(\"\"); //Text is a state variable\r\n    //text=\"SDSD\" --> WRONG Way to change text\r\n    //setText(\"asdasasd\")---> Right way to change text\r\n  return (\r\n\r\n    <>\r\n    <div className={`container text-${props.mode==='light'?'dark':'light'} `}>\r\n         {/* props.alert &&  {props.showAlert} */}\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} \r\n        style={ {backgroundColor: props.mode==='light'?'white':'#1c1f24' ,\r\n                 color: props.mode==='light'?'black':'white' } }id=\"myBox\" rows=\"8\"></textarea>\r\n       </div>\r\n       <button className={`btn btn-${btn_col} mx-1`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n       <button className={`btn btn-${btn_col} mx-1`} onClick={handleLowClick}>Convert to Lowercase</button>\r\n       <button className={`btn btn-${btn_col} mx-1`} onClick={Clear}>Clear Text</button>\r\n       <button className={`btn btn-${btn_col} mx-1`} onClick={handleCapClick}>Convert to Capitalize Case</button>\r\n       <button className={`btn btn-${btn_col} mx-1`} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n\r\n\r\n    </div> \r\n    <div className={`container text-${props.mode==='light'?'dark':'light'} my-3 `}>\r\n        <h2> Your Text Summary</h2>\r\n        <p><b>{text.length===0?0:text.split(\" \").length}</b> words and <b>{text.length}</b> characters</p>\r\n        <p><b>{text.length===0?0:0.008* text.split(\" \").length.toFixed(2)}</b>    Minutes to read </p>\r\n        <h2>Preview:</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textarea to preview it\"}  </p>\r\n    </div> \r\n    </>\r\n  )\r\n}\r\n\r\nTextForm.propTypes={\r\n    heading: PropTypes.string\r\n}\r\n\r\nTextForm.defaultProps={\r\n    heading: \"Enter Text\"\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && \r\n    <div>\r\n        <div class={`alert alert-${props.alert.type.toLowerCase()} alert-dismissible fade show`}role=\"alert\">\r\n        {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n         <strong>{props.alert.type}! </strong>{props.alert.msg}\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\n// import{ BrowserRouter as Router,\n//   Routes,\n//   Route} from \"react-router-dom\";\n  \nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\n\n\nfunction App() {\n\n  const [mode,setMode]=useState(\"light\")\n  // const [Redmode,setRMode]=useState(\"light\")\n  // const [Bluemode,setBMode]=useState(\"light\")\n  // const [Greenmode,setGMode]=useState(\"light\")\n\n\n  const [alert,setAlert]=useState(null)\n\n  const showAlert = (message,type)=>{\n\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  \n\n  const toggleMode=()=>{\n\n    if(mode !=='dark')\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor='#1c1f24';\n      showAlert(\"Dark Mode has Been Enabled\",\"Success\");\n      document.title=\"Text-Utils Home|Dark\";\n     \n    }\n    else\n    {\n      setMode(\"light\");\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has Been Enabled\",\"Success\");\n      document.title=\"Text-Utils Home|Light\";\n\n\n    }\n  }\n\n\n\n  return (\n    <>\n\n    {/* <Router> */}\n\n    <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode={toggleMode}/>\n    {/* <Navbar />  */}\n    {/*  Will Use default props*/}\n\n    <Alert alert={alert}/>\n\n\n    <div className=\"container my-3  \">\n    {/* <Routes>\n      <Route exact path=\"/\" element={<TextForm heading=\"Enter the Text to Analyze\"  mode={mode}  showAlert={showAlert}/>} /> */}\n      <TextForm heading=\"Enter the Text to Analyze\"  mode={mode}  showAlert={showAlert}/>\n      {/* <Route exact path=\"/about\" element={<About/>} />\n    </Routes> */}\n    </div>\n    {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}