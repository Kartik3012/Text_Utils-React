{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","className","style","src","integrity","crossorigin","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","react_router_dom","to","title","aria-label","aria-current","about","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","btn_col","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","_step","_iterator","_createForOfIteratorHelper","split","s","n","done","item","tempText","undefined","substring","err","e","f","join","navigator","clipboard","writeText","filter","element","toFixed","Alert","height","alert","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.450f68ee.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle,setmyStyle]=useState({\r\n\r\n    //     color:'black',\r\n    //     backgroundColor:'white'\r\n    // });\r\n\r\n    // const [btnText,setbtnText]=useState(\"Enable Dark Mode\");\r\n\r\n    // let toggleStyle=()=>{\r\n\r\n    //     if(myStyle.color === 'white')\r\n    //     {\r\n    //         setmyStyle({\r\n    //             color:'black',\r\n    //             backgroundColor:'white',\r\n    //             border: '1px solid white'   \r\n    //         })\r\n    //         setbtnText(\"Enable Dark Mode\");\r\n            \r\n    //     }\r\n    //     else\r\n    //     {\r\n    //         setmyStyle(\r\n    //             {\r\n    //                 color:'white',\r\n    //                 backgroundColor:'black'\r\n    //             }\r\n    //         )\r\n    //         setbtnText(\"Enable Light Mode\");\r\n\r\n    //     }\r\n    // }\r\n\r\n    let myStyle={\r\n        color: props.mode==='dark'?'white':'black',\r\n        backgroundColor: props.mode==='dark'?'#1c1f24':'white',\r\n        // border: '2px solid',\r\n        // borderColor: props.mode==='dark'?'white':'black'\r\n        }\r\n\r\n    return (\r\n\r\n\r\n        <div className='container' style={myStyle}>\r\n            <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa\" crossorigin=\"anonymous\"></script>    \r\n            <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.5/dist/umd/popper.min.js\" integrity=\"sha384-Xe+8cL9oJa6tN/veChSP7q+mnSPaj5Bcu9mPX5F5xIGE0DVittaqT5lorf0EI7Vk\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.min.js\" integrity=\"sha384-ODmDIVzN+pFdexxHEHFBQH3/9/vQ9uori45z4JjnFsRydbmQbmL5t1tQ0culUzyK\" crossorigin=\"anonymous\"></script>\r\n            <h2 className='my-3' >About us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">   \r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                           <strong> Analyze Your Text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <p> This Utility helps you to analyze and manipulate your text efficiently using different functionalities.It provides instant word and character count so that you can monitor your text limitations and work accordingly</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                            <strong>Free to Use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            It is a free to use word counter and manipulator software which you can use anytime for your work.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}> \r\n                            <strong>Browser Compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            It is compatible with every web browser like Chrome, FireFox, Safari, Brave, Edge, Bing etc. So you don't need to install any specific pre-requisites to use it.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"container my-3\">\r\n                <button onClick={toggleStyle} className=\"btn btn-primary\">{btnText}</button>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n","//rfc short form for react function based component\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/Text_Utils-React/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/Text_Utils-React/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/Text_Utils-React/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          {/* <div className=\"d-flex\">\r\n            <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px' , cursor:'pointer'}}></div>\r\n            <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px' , cursor:'pointer'}}></div>\r\n            <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px' , cursor:'pointer'}}></div>\r\n            <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px' , cursor:'pointer'}}></div>\r\n\r\n          </div> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexRadioCheckDefault\" aria-checked=\"false\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefault\">Dark Mode</label>\r\n          </div>\r\n\r\n          {/* <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.RedtoggleMode} className=\"form-check-input\"  type=\"checkbox\" role=\"switch\" id=\"flexRadioCheckDefaultRed\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefaultRed\">Red Dark Mode</label>\r\n          </div>\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.BluetoggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitcRadioDefaultBlue\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefaultBlue\">Blue Dark Mode</label>\r\n          </div>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n            <input onClick={props.GreentoggleMode} className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexRadioCheckDefaultGreen\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexRadioCheckDefaultGreen\">Green Dark Mode</label>\r\n          </div> */}\r\n            {/* checked={`${props.mode==='blue'?'false':'true'}`} */}\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes={\r\n    title :PropTypes.string.isRequired,\r\n    about :PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: \"Default title\",\r\n    about: \"Default About\"\r\n}","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted text to Upper Case\",\"Success\");\r\n    }\r\n\r\n    const handleLowClick=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted text to Lower Case\",\"Success\");\r\n\r\n    }\r\n\r\n    const Clear=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"Cleared text\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleCapClick=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=\"\";\r\n        for ( let item of text.split(/[ ]+/))\r\n        {\r\n            let tempText=\"\";\r\n            if(item[0]!==undefined)\r\n            {\r\n                tempText+=item[0].toUpperCase();\r\n                tempText+=item.substring(1,item.length).toLowerCase();\r\n                newText+=tempText+\" \";  \r\n            }\r\n        }\r\n        \r\n        setText(newText.substring(0,newText.length));\r\n        props.showAlert(\"Converted Capitalize Case\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        // console.log(\"Upper case is fired\" +text)\r\n        let newText=text.split(/[ ]+/);\r\n        \r\n        \r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Spaces\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleCopy=()=>{\r\n        navigator.clipboard.writeText(text);\r\n        \r\n        props.showAlert(\"Copied To ClipBoard!\",\"success\");\r\n    }\r\n\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"Onchange\")  \r\n        setText(event.target.value);\r\n    }\r\n\r\n    let btn_col;\r\n    if(props.mode==='light')\r\n    {\r\n        btn_col='primary';\r\n    }\r\n    else if(props.mode==='dark')\r\n    {\r\n        btn_col='dark';\r\n    } \r\n    // else if(props.mode==='red')\r\n    // {\r\n    //     btn_col='danger';\r\n    // } \r\n    // else if(props.mode==='blue')\r\n    // {\r\n    //     btn_col='info';\r\n    // } \r\n    // else if(props.mode==='green')\r\n    // {\r\n    //     btn_col='success';\r\n    // } \r\n    const[text,setText]=useState(\"\"); //Text is a state variable\r\n    //text=\"SDSD\" --> WRONG Way to change text\r\n    //setText(\"asdasasd\")---> Right way to change text\r\n  return (\r\n\r\n    <>\r\n    <div className={`container text-${props.mode==='light'?'dark':'light'} `}>\r\n         {/* props.alert &&  {props.showAlert} */}\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} \r\n        style={ {backgroundColor: props.mode==='light'?'white':'#1c1f24' ,\r\n                 color: props.mode==='light'?'black':'white' } }id=\"myBox\" rows=\"8\"></textarea>\r\n       </div>\r\n       <button disabled={text.length===0} className={`btn btn-${btn_col} mx-1 my-1`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n       <button disabled={text.length===0} className={`btn btn-${btn_col} mx-1 my-1`} onClick={handleLowClick}>Convert to Lowercase</button>\r\n       <button disabled={text.length===0} className={`btn btn-${btn_col} mx-1 my-1`} onClick={Clear}>Clear Text</button>\r\n       <button disabled={text.length===0} className={`btn btn-${btn_col} mx-1 my-1`} onClick={handleCapClick}>Convert to Capitalize Case</button>\r\n       <button disabled={text.length===0} className={`btn btn-${btn_col} mx-1 my-1`} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n       <button disabled={text.length===0} className={`btn btn-${btn_col} mx-1 my-1`} onClick={handleCopy}>Copy Text</button>\r\n\r\n\r\n\r\n\r\n    </div> \r\n    <div className={`container text-${props.mode==='light'?'dark':'light'} my-3 `}>\r\n        <h2> Your Text Summary</h2>\r\n        <p><b>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</b> words and <b>{text.length}</b> characters</p>\r\n        <p><b>{0.008* text.split(/\\s+/).filter((element)=>{return element.length!==0}).length.toFixed(2)}</b>    Minutes to read </p>\r\n        <h2>Preview:</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textarea to preview it\"}  </p>\r\n    </div> \r\n    </>\r\n  )\r\n}\r\n\r\nTextForm.propTypes={\r\n    heading: PropTypes.string\r\n}\r\n\r\nTextForm.defaultProps={\r\n    heading: \"Enter Text\"\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n  {  props.alert && \r\n\r\n        <div className={`alert alert-${props.alert.type.toLowerCase()} alert-dismissible fade show`}role=\"alert\">\r\n        {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n          <strong>{props.alert.type}! </strong>{props.alert.msg}\r\n        \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n","// import logo from './logo.svg';\nimport{ BrowserRouter as Router,\n  Routes,\n  Route} from \"react-router-dom\";\n  \nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\n\n\nfunction App() {\n\n  const [mode,setMode]=useState(\"light\")\n  // const [Redmode,setRMode]=useState(\"light\")\n  // const [Bluemode,setBMode]=useState(\"light\")\n  // const [Greenmode,setGMode]=useState(\"light\")\n\n\n  const [alert,setAlert]=useState(null)\n\n  const showAlert = (message,type)=>{\n\n    setAlert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  \n  // const removeBodyClasses=()=>{\n  //   document.body.classList.remove('bg-light')\n  //   // document.body.classList.remove('bg-primary')\n  //   document.body.classList.remove('bg-dark')\n  //   document.body.classList.remove('bg-warning')\n  //   document.body.classList.remove('bg-danger')\n  //   document.body.classList.remove('bg-success')\n\n  // }\n  const toggleMode=()=>{\n    // removeBodyClasses();\n    // console.log(cls);\n    // document.body.classList.add('bg-'+cls)\n    if(mode !=='dark')\n    {\n      \n      setMode(\"dark\");\n      document.body.style.backgroundColor='#1c1f24';\n      showAlert(\"Dark Mode has Been Enabled\",\"Success\");\n      // document.title=\"Text-Utils Home|Dark\";\n     \n    }\n    else\n    {\n      setMode(\"light\");\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has Been Enabled\",\"Success\");\n      // document.title=\"Text-Utils Home|Light\";\n\n\n    }\n  }\n\n\n\n  return (\n    <>\n\n    <Router>\n\n    <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode={toggleMode}/>\n    {/* <Navbar />  */}\n    {/*  Will Use default props*/}\n\n    <Alert alert={alert}/>\n\n\n    <div className=\"container my-3  \">\n    <Routes>\n      <Route exact path=\"/Text_Utils-React/\" element={<TextForm heading=\"Text Utils- Word Counter | Character Counter | Case Converter\"  mode={mode}  showAlert={showAlert}/>} />\n      {/* <TextForm heading=\"Enter the Text to Analyze\"  mode={mode}  showAlert={showAlert}/> */}\n      {/* <About mode={mode}/> */}\n      <Route exact path=\"/Text_Utils-React/about\" element={<About mode={mode}/>} />\n    </Routes>\n    </div>\n    </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}